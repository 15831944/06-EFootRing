C51 COMPILER V9.52.0.0   OLED                                                              09/21/2014 15:49:08 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.obj
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE SRC\oled.c BROWSE INCDIR(.\SRC) DEBUG OBJECTEXTEND PRINT(.\oled.lst) TA
                    -BS(2) OBJECT(oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //±¾³ÌÐòÖ»¹©Ñ§Ï°Ê¹ÓÃ£¬Î´¾­×÷ÕßÐí¿É£¬²»µÃÓÃÓÚÆäËüÈÎºÎÓÃÍ¾
   3          //Ê¹ÓÃSysTickµÄÆÕÍ¨¼ÆÊýÄ£Ê½¶ÔÑÓ³Ù½øÐÐ¹ÜÀí
   4          //°üÀ¨delay_us,delay_ms
   5          //ÖÐ¾°Ô°µç×Ó
   6          //µêÆÌµØÖ·£ºhttp://shop73023976.taobao.com/shop/view_shop.htm?tracelog=twddp&trace_log=qianniu_pc
   7          //ÐÞ¸ÄÈÕÆÚ:2014/3/16
   8          //°æ±¾£ºV1.0
   9          //°æÈ¨ËùÓÐ£¬µÁ°æ±Ø¾¿¡£
  10          //Copyright(C) ÖÐ¾°Ô°µç×Ó2014/3/16
  11          //All rights reserved
  12          //********************************************************************************
  13          //½Ó¿Ú¶¨Òå²ÎÕÕoled.hÎÄ¼þ
  14          //ËÄÏßSPIÐèÒª½ÓÆß¸ùÏß£¬ÆäÖÐRES¿ÉÒÔ²»½Ó£»µ«ÊÇ²»½ÓÊ±ºò±ØÐëÀ­¸ß
  15          // GND,VCC,CS,RES,D/C,CLK,DIN
  16          //¹ØÓÚµçÑ¹ÎÊÌâ£»Èç¹û¿Í»§ÐèÒª³¤Ê±¼äÎÈ¶¨¹¤×÷£»½¨ÒéÈ«²¿²ÉÓÃ3.3VµçÔ´£»µçÆ½ÐÅºÅÒ²²ÉÓÃ3.3VµÄ
  17          //Èç¹û¿Í»§ÐèÒªÓÃ5VµçÔ´£¬ËäÈ»5V¿ÉÒÔÕý³£¹¤×÷£¬µ«Ê½¨ÒéÇ²»Òª³¤Ê±¼ä¹¤×÷£»ÕâÑù¿ÉÄÜ»á¼õÉÙÆÁµÄÊÙÃü£»ÔÚVCC¶Ë´®Ò»Ð¡µ
             -ç×è¿ÉÄÜ»áºÃÒ»Ð©¡£
  18          #include "oled.h"
  19          //#include "stdlib.h"
  20          #include "oledfont.h"    
  21          //#include "delay.h"
  22          //OLEDµÄÏÔ´æ
  23          //´æ·Å¸ñÊ½ÈçÏÂ.
  24          //[0]0 1 2 3 ... 127  
  25          //[1]0 1 2 3 ... 127  
  26          //[2]0 1 2 3 ... 127  
  27          //[3]0 1 2 3 ... 127  
  28          //[4]0 1 2 3 ... 127  
  29          //[5]0 1 2 3 ... 127  
  30          //[6]0 1 2 3 ... 127  
  31          //[7]0 1 2 3 ... 127         
  32          void delay_ms(unsigned int ms)
  33          {                         
  34   1        unsigned int a;
  35   1        while(ms)
  36   1        {
  37   2          a=1800;
  38   2          while(a--);
  39   2          ms--;
  40   2        }
  41   1        return;
  42   1      }
  43          #if OLED_MODE==1
              //ÏòSSD1106Ð´ÈëÒ»¸ö×Ö½Ú¡£
              //dat:ÒªÐ´ÈëµÄÊý¾Ý/ÃüÁî
              //cmd:Êý¾Ý/ÃüÁî±êÖ¾ 0,±íÊ¾ÃüÁî;1,±íÊ¾Êý¾Ý;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                DATAOUT(dat);     
                if(cmd)
                  OLED_DC_Set();
                else 
                  OLED_DC_Clr();       
C51 COMPILER V9.52.0.0   OLED                                                              09/21/2014 15:49:08 PAGE 2   

                OLED_CS_Clr();
                OLED_WR_Clr();   
                OLED_WR_Set();
                OLED_CS_Set();    
                OLED_DC_Set();   
              }             
              #else
  61          //ÏòSSD1306Ð´ÈëÒ»¸ö×Ö½Ú¡£
  62          //dat:ÒªÐ´ÈëµÄÊý¾Ý/ÃüÁî
  63          //cmd:Êý¾Ý/ÃüÁî±êÖ¾ 0,±íÊ¾ÃüÁî;1,±íÊ¾Êý¾Ý;
  64          void OLED_WR_Byte(u8 dat,u8 cmd)
  65          { 
  66   1        u8 i;       
  67   1        if(cmd)
  68   1          OLED_DC_Set();
  69   1        else 
  70   1          OLED_DC_Clr();      
  71   1        OLED_CS_Clr();
  72   1        for(i=0;i<8;i++)
  73   1        {       
  74   2          OLED_SCLK_Clr();
  75   2          if(dat&0x80)
  76   2            {
  77   3             OLED_SDIN_Set();
  78   3            }
  79   2      else
  80   2             OLED_SDIN_Clr();
  81   2              OLED_SCLK_Set();
  82   2          dat<<=1;   
  83   2        }             
  84   1        OLED_CS_Set();
  85   1        OLED_DC_Set();      
  86   1      } 
  87          #endif
  88            void OLED_Set_Pos(unsigned char x, unsigned char y) 
  89          { 
  90   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
  91   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  92   1        OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
  93   1      }       
  94          //¿ªÆôOLEDÏÔÊ¾    
  95          void OLED_Display_On(void)
  96          {
  97   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDCÃüÁî
  98   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  99   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 100   1      }
 101          //¹Ø±ÕOLEDÏÔÊ¾     
 102          void OLED_Display_Off(void)
 103          {
 104   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDCÃüÁî
 105   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 106   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 107   1      }            
 108          //ÇåÆÁº¯Êý,ÇåÍêÆÁ,Õû¸öÆÁÄ»ÊÇºÚÉ«µÄ!ºÍÃ»µãÁÁÒ»Ñù!!!    
 109          void OLED_Clear(void)  
 110          {  
 111   1        u8 i,n;       
 112   1        for(i=0;i<8;i++)  
 113   1        {  
 114   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //ÉèÖÃÒ³µØÖ·£¨0~7£©
 115   2          OLED_WR_Byte (0x00,OLED_CMD);      //ÉèÖÃÏÔÊ¾Î»ÖÃ¡ªÁÐµÍµØÖ·
C51 COMPILER V9.52.0.0   OLED                                                              09/21/2014 15:49:08 PAGE 3   

 116   2          OLED_WR_Byte (0x10,OLED_CMD);      //ÉèÖÃÏÔÊ¾Î»ÖÃ¡ªÁÐ¸ßµØÖ·   
 117   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 118   2        } //¸üÐÂÏÔÊ¾
 119   1      }
 120          
 121          
 122          //ÔÚÖ¸¶¨Î»ÖÃÏÔÊ¾Ò»¸ö×Ö·û,°üÀ¨²¿·Ö×Ö·û
 123          //x:0~127
 124          //y:0~63
 125          //mode:0,·´°×ÏÔÊ¾;1,Õý³£ÏÔÊ¾         
 126          //size:Ñ¡Ôñ×ÖÌå 16/12 
 127          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 128          {       
 129   1        unsigned char c=0,i=0;  
 130   1          c=chr-' ';//µÃµ½Æ«ÒÆºóµÄÖµ      
 131   1          if(x>Max_Column-1){x=0;y=y+2;}
 132   1          if(SIZE ==16)
 133   1            {
 134   2            OLED_Set_Pos(x,y);  
 135   2            for(i=0;i<8;i++)
 136   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 137   2            OLED_Set_Pos(x,y+1);
 138   2            for(i=0;i<8;i++)
 139   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 140   2            }
 141   1            else {  
 142   2              OLED_Set_Pos(x,y+1);
 143   2              for(i=0;i<6;i++)
 144   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 145   2              
 146   2            }
 147   1      }
 148          //m^nº¯Êý
 149          u32 oled_pow(u8 m,u8 n)
 150          {
 151   1        u32 result=1;  
 152   1        while(n--)result*=m;    
 153   1        return result;
 154   1      }         
 155          //ÏÔÊ¾2¸öÊý×Ö
 156          //x,y :Æðµã×ø±ê  
 157          //len :Êý×ÖµÄÎ»Êý
 158          //size:×ÖÌå´óÐ¡
 159          //mode:Ä£Ê½ 0,Ìî³äÄ£Ê½;1,µþ¼ÓÄ£Ê½
 160          //num:ÊýÖµ(0~4294967295);       
 161          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 162          {           
 163   1        u8 t,temp;
 164   1        u8 enshow=0;               
 165   1        for(t=0;t<len;t++)
 166   1        {
 167   2          temp=(num/oled_pow(10,len-t-1))%10;
 168   2          if(enshow==0&&t<(len-1))
 169   2          {
 170   3            if(temp==0)
 171   3            {
 172   4              OLED_ShowChar(x+(size2/2)*t,y,' ');
 173   4              continue;
 174   4            }else enshow=1; 
 175   3             
 176   3          }
 177   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
C51 COMPILER V9.52.0.0   OLED                                                              09/21/2014 15:49:08 PAGE 4   

 178   2        }
 179   1      } 
 180          //ÏÔÊ¾Ò»¸ö×Ö·ûºÅ´®
 181          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 182          {
 183   1        unsigned char j=0;
 184   1        while (chr[j]!='\0')
 185   1        {   OLED_ShowChar(x,y,chr[j]);
 186   2            x+=8;
 187   2          if(x>120){x=0;y+=2;}
 188   2            j++;
 189   2        }
 190   1      }
 191          //ÏÔÊ¾ºº×Ö
 192          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 193          {               
 194   1        u8 t,adder=0;
 195   1        OLED_Set_Pos(x,y);  
 196   1          for(t=0;t<16;t++)
 197   1          {
 198   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 199   2              adder+=1;
 200   2           }  
 201   1          OLED_Set_Pos(x,y+1);  
 202   1          for(t=0;t<16;t++)
 203   1            { 
 204   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 205   2              adder+=1;
 206   2            }         
 207   1      }
 208          /***********¹¦ÄÜÃèÊö£ºÏÔÊ¾ÏÔÊ¾BMPÍ¼Æ¬128¡Á64ÆðÊ¼µã×ø±ê(x,y),xµÄ·¶Î§0¡«127£¬yÎªÒ³µÄ·¶Î§0¡«7****************
             -*/
 209          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 210          {   
 211   1       unsigned int j=0;
 212   1       unsigned char x,y;
 213   1        
 214   1        if(y1%8==0) y=y1/8;      
 215   1        else y=y1/8+1;
 216   1        for(y=y0;y<y1;y++)
 217   1        {
 218   2          OLED_Set_Pos(x0,y);
 219   2          for(x=x0;x<x1;x++)
 220   2            {      
 221   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 222   3            }
 223   2        }
 224   1      } 
 225          
 226          
 227          //³õÊ¼»¯SSD1306             
 228          void OLED_Init(void)
 229          {
 230   1       
 231   1      
 232   1       
 233   1        OLED_RST_Set();
 234   1        delay_ms(100);
 235   1        OLED_RST_Clr();
 236   1        delay_ms(100);
 237   1        OLED_RST_Set(); 
C51 COMPILER V9.52.0.0   OLED                                                              09/21/2014 15:49:08 PAGE 5   

 238   1        /*          
 239   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 240   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 241   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 242   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 243   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 244   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 245   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0×óÓÒ·´ÖÃ 0xa1Õý³£
 246   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0ÉÏÏÂ·´ÖÃ 0xc8Õý³£
 247   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 248   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 249   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 250   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 251   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 252   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 253   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 254   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 255   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 256   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 257   1        OLED_WR_Byte(0x12,OLED_CMD);
 258   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 259   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 260   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 261   1        OLED_WR_Byte(0x02,OLED_CMD);//
 262   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 263   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 264   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 265   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 266   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 267   1        */
 268   1      
 269   1        OLED_WR_Byte(0xFD,OLED_CMD);//--turn off oled panel
 270   1        OLED_WR_Byte(0x12,OLED_CMD);//--turn off oled panel 
 271   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 272   1        OLED_WR_Byte(0xD5,OLED_CMD);//---set low column address
 273   1        OLED_WR_Byte(0xA0,OLED_CMD);//---set high column address
 274   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 275   1        OLED_WR_Byte(0x3F,OLED_CMD);//--set contrast control register
 276   1        OLED_WR_Byte(0xD3,OLED_CMD); // Set SEG Output Current Brightness
 277   1        OLED_WR_Byte(0x00,OLED_CMD);//--Set SEG/Column Mapping     0xa0×óÓÒ·´ÖÃ 0xa1Õý³£
 278   1        OLED_WR_Byte(0x40,OLED_CMD);//Set COM/Row Scan Direction   0xc0ÉÏÏÂ·´ÖÃ 0xc8Õý³£
 279   1        OLED_WR_Byte(0xA1,OLED_CMD);//--set normal display
 280   1        OLED_WR_Byte(0xC8,OLED_CMD);//--set multiplex ratio(1 to 64)
 281   1        OLED_WR_Byte(0xDA,OLED_CMD);//--1/64 duty
 282   1        OLED_WR_Byte(0x2,OLED_CMD);//-set display offset  Shift Mapping RAM Counter (0x00~0x3F)
 283   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 284   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 285   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 286   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 287   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 288   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 289   1        OLED_WR_Byte(0x12,OLED_CMD);
 290   1        OLED_WR_Byte(0x81,OLED_CMD);//--set vcomh
 291   1        OLED_WR_Byte(0xBF,OLED_CMD);//Set VCOM Deselect Level
 292   1        OLED_WR_Byte(0xD9,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 293   1        OLED_WR_Byte(0x25,OLED_CMD);//
 294   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set Charge Pump enable/disable
 295   1        OLED_WR_Byte(0x34,OLED_CMD);//--set(0x10) disable
 296   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 297   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 298   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 299   1        
C51 COMPILER V9.52.0.0   OLED                                                              09/21/2014 15:49:08 PAGE 6   

 300   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 301   1        OLED_Clear();
 302   1        OLED_Set_Pos(0,0);  
 303   1      }  
 304          
*** WARNING C294 IN LINE 142 OF SRC\oled.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    842    ----
   CONSTANT SIZE    =   2520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
